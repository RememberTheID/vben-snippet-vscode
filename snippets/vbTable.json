{
    "vbTableKey": {
        "prefix": "vbTable",
        "body": [
            "<template>",
            " <div>",
            "   <BasicTable @register=\"registerTable\">",
            "     <template #toolbar>",
            "       <a-button type=\"primary\" @click=\"handleCreate\"> $1</a-button>",
            "      </template>",
            "     <template #action=\"{ record }\">",
            "       <TableAction",
            "         :actions=\"[",
            "           {",
            "             icon: 'clarity:note-edit-line',",
            "             onClick: handleEdit.bind(null, record),",
            "           },",
            "           {",
            "             icon: 'ant-design:delete-outlined',",
            "             color: 'error',",
            "             popConfirm: {",
            "               title: '是否确认删除？',",
            "               confirm: handleDelete.bind(null, record),",
            "             },",
            "           },",
            "         ]\"",
            "         />",
            "       </template>",
            "     </BasicTable>",
            "   <RoleModal @register=\"registerModal\" @success=\"handleSuccess\" />",
            " </div>",
            "</template>",
            "",
            "<script lang=\"ts\">",
            " import { defineComponent, onMounted, onUnmounted, reactive, toRefs } from 'vue';",
            " import { BasicTable, useTable, TableAction } from '/@/components/Table';",
            " import { useMessage } from '/@/hooks/web/useMessage';",
            " import { useModal } from '/@/components/Modal';",
            " import { columns } from './role.data';",
            "\texport default defineComponent({",
            "\tname: 'RoleManagement',",
            "\tcomponents: {",
            "\t\tBasicTable,",
            "\t\tTableAction,",
            "\t},",
            "\tsetup () {",
            "\t\tconst { createMessage } = useMessage();",
            "\t\tconst [registerModal, { openModal }] = useModal();",
            "\t\tlet stateData = reactive({});",
      
            "\t\tconst [registerTable, { reload }] = useTable({",
            "\t\ttitle: '角色管理',",
            "\t\t// api: your API name,",
            "\t\tcolumns,",
            "\t\tcanResize: false,",
            "\t\tshowTableSetting: true,",
            "\t\tbordered: true,",
            "\t\tshowIndexColumn: false,",
            "\t\tactionColumn: {",
            "\t\twidth: 70,",
            "\t\ttitle: '操作',",
            "\t\tdataIndex: 'action',",
            "\t\tslots: { customRender: 'action' },",
            "\t\t},",
            "\t\t});",
            "function handleCreate() {",
            " openModal(true, {",
            "  isUpdate: false,",
            " });",
            " }",
            "function handleDelete(record: Recordable) {",
            " console.log(record);",
            " reload();",
            "}",
            "function handleEdit(record: Recordable) {",
            " console.log(record);",
            "  openModal(true, {",
            "   record,",
            "   isUpdate: true,",
            "  });",
            " }",
            " onMounted(() => {});",
            " onUnmounted(() => {});",
            " function handleSuccess() {",
            "   reload();",
            " }",
            "return {",
            " registerTable,",
            " registerModal,",
            " handleCreate,",
            " handleEdit,",
            " handleSuccess,",
            " createMessage,",
            " reload,",
            " handleDelete,",
            " ...toRefs(stateData),",
            " };",
            "},",
            "});",
            "</script>",
            "",
            "<style lang=\"scss\" scoped>",
            "",
            "</style>"
          ],
        "description": "引入 BasicForm"
      }
}
